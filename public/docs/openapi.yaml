openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://kassa.test'
paths:
  /api/hello:
    get:
      summary: ''
      operationId: getApiHello
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: 'Hello World'
      tags:
        - Endpoints
      security: []
  /api/exchanges/new:
    post:
      summary: 'create exchange'
      operationId: createExchange
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"result\": \"Exchange created successfully\",\n}"
      tags:
        - Exchanges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'nullable The name of the exchange.'
                  example: 'John Doe'
                partner_id:
                  type: integer
                  description: 'The id of the partner.'
                  example: 1
                value:
                  type: string
                  description: 'nullable The value of the exchange.'
                  example: '1000'
                type:
                  type: string
                  description: 'nullable The type of the exchange.'
                  example: 'Tonna, metr, M3, M2'
                amount:
                  type: integer
                  description: 'The amount of the exchange.'
                  example: 1
                given_amount:
                  type: nullable
                  description: 'The given amount of the exchange.'
                  example: '1000'
                other:
                  type: boolean
                  description: 'false The other of the exchange.'
                  example: false
              required:
                - partner_id
                - amount
                - given_amount
      security: []
  /api/exchanges/edit:
    put:
      summary: 'update exchange'
      operationId: updateExchange
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"result\": \"Exchange updated successfully\",\n}"
      tags:
        - Exchanges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The id of the exchange.'
                  example: 1
                name:
                  type: string
                  description: 'nullable The name of the exchange.'
                  example: 'John Doe'
                value:
                  type: string
                  description: 'nullable The value of the exchange.'
                  example: '1000'
                type:
                  type: string
                  description: 'nullable The type of the exchange.'
                  example: 'Tonna, metr, M3, M2'
                amount:
                  type: integer
                  description: 'The amount of the exchange.'
                  example: 1
                given_amount:
                  type: nullable
                  description: 'The given amount of the exchange.'
                  example: '1000'
              required:
                - id
                - amount
                - given_amount
      security: []
  /api/exchanges/delete:
    delete:
      summary: 'delete exchange'
      operationId: deleteExchange
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"result\": \"Exchange deleted successfully\",\n}"
      tags:
        - Exchanges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The id of the exchange.'
                  example: 1
              required:
                - id
      security: []
  /api/partners/new:
    post:
      summary: 'create partner'
      operationId: createPartner
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Partners
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the partner.'
                  example: 'John Doe'
                phone_number:
                  type: string
                  description: 'The phone number of the partner.'
                  example: '998901234567'
                address:
                  type: string
                  description: 'nullable The address of the partner.'
                  example: '123, Main Street, New York'
                type:
                  type: string
                  description: 'The type of the partner.'
                  example: 'debtor or partner'
              required:
                - name
                - phone_number
                - type
      security: []
  /api/partners/get:
    post:
      summary: 'get all partners'
      operationId: getAllPartners
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"result\": [\n      {\n         \"id\": 1,\n        \"name\": \"John Doe\",\n       \"phone_number\": \"998901234567\",\n      \"address\": \"123, Main Street, New York\",\n     \"type\": \"debtor\",\n    \"created_at\": \"2023-06-02T22:23:36.000000Z\",\n    \"updated_at\": \"2023-06-02T22:23:36.000000Z\"\n},\n\"debts\": 0,\n\"right\": 0,\n]\n}"
      tags:
        - Partners
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'nullable The type of the partner.'
                  example: 'debtor or partner'
                id:
                  type: integer
                  description: 'nullable The id of the partner.'
                  example: 1
      security: []
  /api/partners/edit:
    put:
      summary: 'update partner'
      operationId: updatePartner
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Partners
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The id of the partner.'
                  example: 1
                name:
                  type: string
                  description: 'The name of the partner.'
                  example: 'John Doe'
                phone_number:
                  type: string
                  description: 'nullable The phone number of the partner.'
                  example: '998901234567'
                address:
                  type: string
                  description: 'nullable The address of the partner.'
                  example: '123, Main Street, New York'
              required:
                - id
                - name
      security: []
  /api/partners/delete:
    delete:
      summary: 'delete partner'
      operationId: deletePartner
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Partners
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The id of the partner.'
                  example: 1
              required:
                - id
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Exchanges
    description: ''
  -
    name: Partners
    description: ''
